import{writable,readable,derived,get}from"svelte/store";class ColumnStore{columns;lastColumnID;activeColumnIndex;constructor(t){this.columns=writable(t.columns),this.lastColumnID=writable(t.lastColumnID||1),this.activeColumnIndex=writable(null)}set(t){this.columns.set(t)}get(){return get(this.columns)}addColumnOnly(t,e){const l=get(this.columns);let n=l.length;null!==t&&(n="left"==e?t:t+1);let s={id:this._getIncrementedColumnID(),name:"Column Name",format:"text",status:"created"};l.splice(n,0,s),this.columns.set(l)}moveColumn(t,e){const l=get(this.columns),n=l.findIndex((e=>e.id==t));if(0==n&&"left"==e||n==l.length-1&&"right"==e)return;let s="left"==e?n-1:n+1,u=l[n];l.splice(n,1),l.splice(s,0,u),this.columns.set(l)}deleteColumnById(t){const e=get(this.columns);let l=e.findIndex((e=>e.id==t));e[l].status="deleted",this.columns.set(e),this.activeColumnIndex.set(null)}__getSourceColumn(t,e){return e.find((e=>e.sourceId==t))}__getFirstSourceColumnId(t,e){let l=e.find((e=>e.id==t)).sourceId||-1;if(-1==l)return-1;let n=e.findIndex((t=>t.sourceId==l));if(-1==n)return-1;let s=this.__getFirstSourceColumnId(l,e);return-1!=s&&(l=s),l}__getDuplicatedColumns(t){let e=get(this.columns),l=[];return e.forEach((n=>{this.__getFirstSourceColumnId(n.id,e)==t&&l.push(n.id)})),l}duplicateColumnById(t){const e=get(this.columns),l=this._getIncrementedColumnID(),n=e.findIndex((e=>e.id==t));let s=n+1,u=Object.assign({},e[n]);u.id=l,u.status="duplicated",u.sourceId=t,e.splice(s,0,u),this.columns.set(e)}changeColumnName(t,e){this.columns.update((l=>(duplicateColumn.status="updated",l[e].name=t,l)))}changeColumnOptions(t,e,l){let n=get(this.columns).findIndex((e=>e.id==t));this.columns.update((t=>(t[n][e]=l,t)))}_getIncrementedColumnID(){return this.lastColumnID.set(get(this.lastColumnID)+1),get(this.lastColumnID)}}export default ColumnStore;